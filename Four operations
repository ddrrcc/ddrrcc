import java.util.Scanner;
public class test {
	static int simplify(int x,int y){/*求两数最大公约数，用于分数化简*/
    	int t,xx,yy,k=1;
    	if(x>y)
    	{
    		t=x;x=y;y=t;
    	}
    	for(int i=x;i>=2;i--)
    	{
    		  xx=x%i;yy=y%i;
    		  if(xx==0&&yy==0){
    			  k=i;
    			  break;
    		  }	 
    		}
    	return k;
    }
	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		int a1,a2,b1,b2,k;
		/*控制题目个数*/
		Scanner in=new Scanner(System.in);
		System.out.print("请输入题目个数(>0)：");
		int number=in.nextInt();
		 /*数值范围*/
	    System.out.print("请输入数值所取得最大值（>0）：");
	    int max=in.nextInt();
		/*判断括号*/
		int backets;
		System.out.print("是否有括号：（0：无  1：有）：");
		backets=in.nextInt();
		if(backets==0)
		{
			/*控制是否有负数*/
			System.out.print("是否有负数：（0：无  1：有）：");
		    int negative=in.nextInt();
			/*控制是否有乘除*/
			System.out.print("是否有乘除法（0：无   1：有）：");
			int panduan;
			for(;;)
			{
				panduan=in.nextInt();
				if(panduan==0||panduan==1) break;
				else
					panduan=in.nextInt();
			}	  
		   /*有无余数*/
		    int remainder=0;
		    if(panduan==1){
		    System.out.print("是否有余数：（0：无  1：有）：");
		    remainder=in.nextInt();}
		   /*算法的实现*/
		    for(int i=0;i<number;i++)
	       	{
			   int index=(int)(Math.random()*4); //随机产生，控制运算符
			   a1=(int)(Math.random()*max);
			   a2=(int)(Math.random()*(max-1)+1);
			   b1=(int)(Math.random()*max);
			   b2=(int)(Math.random()*(max-1)+1);
			   k=(int)(Math.random()*2);        //控制是否是整数或分数,随机产生
			   if(k==0)//k=1输出整数运算
		        	{
				      if(index==0) //加法运算
				        {
				    	  if(negative==0)//没有负数
					       System.out.println(a1+"+"+b1+"=");
				    	  else 
				    	  {
				    		  a1=-1*a1;
				    		  System.out.println(a1+"+"+b1+"=");  
				    	  }
			        } 
				      if(index==1)//减法运算
			         	{
				    	  if(negative==0){
					       if(a1>b1)
					        {
						       System.out.println(a1+"-"+b1+"=");
					        }
					        else
					        {
					        	System.out.println(b1+"-"+a1+"=");
					        }
					       }
				    	  else
				    		  System.out.println(a1+"-"+b1+"=");
				   }
				    
			   if(panduan!=0)
			   {
				  if(index==2)//乘法运算
				    {
					   System.out.println(a1+"*"+b1+"=");
				    }
				  if(index==3)//除法运算
				    {
					   if(remainder==0)
					   {//没有余数
						for(int kk=0;;){ //余数不为0.继续生成随机数							
						if(a1!=0){   //判断分母是否为0
							if(b1%a1!=0){
							a1=(int)(Math.random()*max);
							b1=(int)(Math.random()*max);
							}							
							else
								break;
						}
						else
							a1=(int)(Math.random()*max);}
					    }
					System.out.println(b1+"/"+a1+"=");					
				    }
				}
			   else if(panduan==0){
				   if(index==2) //加法运算
			        {
			    	  if(negative==0)//没有负数
				       System.out.println(a1+"+"+b1+"=");
			    	  else 
			    	  {
			    		  a1=-1*a1;
			    		  System.out.println(a1+"+"+b1+"=");  
			    	  }
		        	} 
			      if(index==3)//减法运算
		         	{
			    	  if(negative==0){
				       if(a1>b1)
				        {
					       System.out.println(a1+"-"+b1+"=");
				        }
				        else
				        {
				        	System.out.println(b1+"-"+a1+"=");
				        }
				       }
			    	  else
			    		  System.out.println(a1+"-"+b1+"=");
			   }
			   }
			}
		    else//分数计算
			{  
		          int s2=simplify(a1,a2);a1=a1/s2;a2=a2/s2;
		    	  int s3=simplify(b1,b2);b1=b1/s3;b2=b2/s3;
				if(index==0)
				{ 
					if(negative==0) //没有负数
					{
					/*分母不为1，分情况输出*/
					        if(a2!=1&&b2!=1)
					           System.out.println(a1+"/"+a2+"+"+b1+"/"+b2+"=");
					        else if(a2==1){
					           System.out.println(a1+"+"+b1+"/"+b2+"=");
					         }
					        else if(b2==1){
						        System.out.println(a1+"/"+a2+"+"+b1+"=");
					         }
					   
					}
					else{//没有负数
						if(a2!=1&&b2!=1)
					           System.out.println("-"+a1+"/"+a2+"+"+b1+"/"+b2+"=");
					        else if(a2==1){
					           System.out.println("-"+a1+"+"+b1+"/"+b2+"=");
					         }
					        else if(b2==1){
						        System.out.println("-"+a1+"/"+a2+"+"+b1+"=");
					         }
					}
			    }
				if(index==1)
				{
					if(a1/a2>=b1/b2){
					if(a2!=1&&b2!=1)
					    System.out.println(a1+"/"+a2+"-"+b1+"/"+b2+"=");
					else if(a2==1){
						System.out.println(a1+"-"+b1+"/"+b2+"=");
					}
					else if(b2==1){
						System.out.println(a1+"/"+a2+"-"+b1+"=");
					}
				   }
					else{
						if(a2!=1&&b2!=1)
						    System.out.println(b1+"/"+b2+"-"+a1+"/"+a2+"=");
						else if(a2==1){
							System.out.println(b1+"/"+b2+"-"+a1+"=");
						}
						else if(b2==1){
							System.out.println(b1+"-"+a1+"/"+a2+"=");
						}
					}
				}
				if(panduan!=0){
				if(index==2)
				{
					if(a2!=1&&b2!=1)
					    System.out.println(a1+"/"+a2+"*"+b1+"/"+b2+"=");
					else if(a2==1){
						System.out.println(a1+"*"+b1+"/"+b2+"=");
					}
					else if(b2==1){
						System.out.println(a1+"/"+a2+"*"+b1+"=");
					}
				}
				if(index==3)
				{
					if(a2!=1&&b2!=1)
					    System.out.println("("+a1+"/"+a2+")"+"/"+"("+b1+"/"+b2+")"+"=");
					else if(a2==1&&a1!=0){
						System.out.println(a1+"/"+"("+b1+"/"+b2+")"+"=");
					}
					else if(b2==1&&b1!=0){
						System.out.println("("+a1+"/"+a2+")"+"/"+b1+"=");
					}
				}
				}
				else if(panduan==0){
					if(index==2)
					{ 
						if(negative==0) //没有负数
						{
						/*分母不为1，分情况输出*/
						        if(a2!=1&&b2!=1)
						           System.out.println(a1+"/"+a2+"+"+b1+"/"+b2+"=");
						        else if(a2==1){
						           System.out.println(a1+"+"+b1+"/"+b2+"=");
						         }
						        else if(b2==1){
							        System.out.println(a1+"/"+a2+"+"+b1+"=");
						         }
						   
						}
						else{//没有负数
							if(a2!=1&&b2!=1)
						           System.out.println("-"+a1+"/"+a2+"+"+b1+"/"+b2+"=");
						        else if(a2==1){
						           System.out.println("-"+a1+"+"+b1+"/"+b2+"=");
						         }
						        else if(b2==1){
							        System.out.println("-"+a1+"/"+a2+"+"+b1+"=");
						         }
						}
				    }
					if(index==3)
					{
						if(a1/a2>=b1/b2){
						if(a2!=1&&b2!=1)
						    System.out.println(a1+"/"+a2+"-"+b1+"/"+b2+"=");
						else if(a2==1){
							System.out.println(a1+"-"+b1+"/"+b2+"=");
						}
						else if(b2==1){
							System.out.println(a1+"/"+a2+"-"+b1+"=");
						}
					   }
						else{
							if(a2!=1&&b2!=1)
							    System.out.println(b1+"/"+b2+"-"+a1+"/"+a2+"=");
							else if(a2==1){
								System.out.println(b1+"/"+b2+"-"+a1+"=");
							}
							else if(b2==1){
								System.out.println(b1+"-"+a1+"/"+a2+"=");
							}
						}
					}
				}
			}
		}
			
		
	}
		else//有括号
		{
			int szgs,fhgs,x,z,y;//szgs数字个数 fhgs符号个数
			int sz[]=new int[20];//数字数组
			char fh[]=new char[10];//字符数组
			char operate[]={'+','-','*','/'};
			for(int p=0;p<number;p++){
			   szgs=(int)(Math.random()*7+3);//随机生成数字个数（3~7）
			   fhgs=szgs-1;//字符个数比数字少1
			   for(y=0;y<szgs;y++)
			    {
			    	sz[y]=(int)(Math.random()*max);//随机生成数
			    }
			   for(y=0;y<fhgs;y++)
			    {
			    	x=(int)(Math.random()*3);//产生0~3的随机数  控制字符
			    	fh[y]=operate[x];
			    }
			   fh[fhgs]='=';
			   if(fhgs%2==0){//运算符个数为偶数时，从第二个数前输出括号
				  System.out.print(sz[0]);System.out.print(fh[0]);
				  for(y=1;y<fhgs;y++){
					System.out.print("(");
					System.out.print(sz[y]);
					System.out.print(fh[y]);
					System.out.print(sz[y+1]);
					System.out.print(")");
					System.out.print(fh[y+1]);
					y=y+1;
				   }System.out.println();
			   }
			  else{//为奇数从第一个开始，两两数输出一个括号
				for(y=0;y<fhgs;y++){
					System.out.print("(");
					System.out.print(sz[y]);
					System.out.print(fh[y]);
					System.out.print(sz[y+1]);
					System.out.print(")");
					System.out.print(fh[y+1]);
					y=y+1;
				}System.out.println();
			  }
		   }
		}
	}
	
}

	
